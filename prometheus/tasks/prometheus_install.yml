- name: Create directories
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop:
    - { path: "{{ ansible_dir }}", owner: "root", group: "root", mode: "755" }
    - { path: "{{ prometheus_dir }}", owner: "root", group: "root", mode: "755" }
    - { path: "{{ prometheus_dir }}/data", owner: "{{ prometheus_owner }}", group: "{{ prometheus_group }}", mode: "755" }

- name: create config files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop:
    - { src: "templates/prometheus.j2", dest: "{{ prometheus_dir }}/prometheus.yml", owner:  "root", group: "root", mode: "755" }
    - { src: "templates/rules.j2", dest: "{{ prometheus_dir }}/rules.yml", owner:  "root", group: "root", mode: "644" }
    - { src: "templates/hosts.j2", dest: "/etc/hosts", owner: "root", group: "root", mode: "644" }
    - { src: "templates/dns_targets.j2", dest: "{{ prometheus_dir }}/dns_targets.yml", owner: "root", group: "root", mode: "644" }
  register: config_status

- name: Create internal docker network
  docker_network:
    name: "{{ monitoring_network_name }}"
    driver: bridge
    ipam_config:
      - subnet: "{{ monitoring_subnet }}"
        gateway: "{{ monitoring_gateway }}"
    state: present

- name: run prometheus container
  docker_container:
    name: "{{ prometheus_container_name }}"
    image: "{{ prometheus_container_image }}"
    ports: "{{ prometheus_container_ports }}"
    state: started
    memory: "{{ ansible_memtotal_mb * 0.75 }}m"
    networks:
      - name: "{{ monitoring_network_name }}"
        ipv4_address: "{{ prometheus_container_ip }}"
    restart_policy: always
    volumes:
      - "{{ prometheus_dir }}/rules.yml:/etc/prometheus/rules.yml"
      - "{{ prometheus_dir }}/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "{{ prometheus_dir }}/dns_targets.yml:/etc/prometheus/dns_targets.yml"
      - "{{ prometheus_dir }}/data:/prometheus:rw"
      - /etc/hosts:/etc/hosts
    restart: "{{ config_status.changed }}"
